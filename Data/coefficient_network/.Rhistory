# tkplot(cg)
plot.igraph(cg,
# layout = layout.random,
vertex.color = "blanchedalmond",
vertex.size = 10,
# label.degree = -pi/20,
# label.dist = 0,
edge.color = "gainsboro"
# edge.width = 1,
# edge.labels = NA,
# vertex.frame.color="black",
# axes = FALSE,
# xlab = "",
# ylab = "",
# xlim=c(-1,1),
# ylim=c(-1,1)
)
# inspect the vertexes(nodes) in the network----
vertex_attr(g2)
# repeat for the weighted network g2----
# some attributes----
info <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/processedIndo.csv")
# information: goal, target, indicator
att2 <- info[3:5] %>%
unique() %>%
filter(Indicator %in%vertex_attr(g2)$name)
# add all the attributes to the vertex----
vertex_attr(g2, index = att2$Indicator) <- att2
# repeat for the weighted network g2----
# some attributes----
info <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/processedIndo.csv")
# information: goal, target, indicator
att2 <- info[3:5] %>%
unique() %>%
filter(Indicator %in%vertex_attr(g2)$name)
# information: goal, target, indicator
att2 <- info[3:5] %>%
unique() %>%
filter(Indicator %in% unique(append(el$Var1, el$Var2)))
# add all the attributes to the vertex----
vertex_attr(g2, index = att2$Indicator) <- att2
# ------------------------------------------------------------------
# build a weighted network base (edge weight = coefficient)----
matrix_d <- read_csv("indo_coefficients_matrix.csv") # adjacency matrix
matrix_d <- matrix_d[-1]
m <- as.matrix(matrix_d)
m
# m <- abs(m) # if you want to keep only the absolute value of coefficients
rownames(m) <- colnames(matrix_d)
g2 <- graph_from_adjacency_matrix(m, mode = "undirected", weighted = TRUE)
# repeat for the weighted network g2----
# some attributes----
info <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/processedIndo.csv")
# information: goal, target, indicator
att2 <- info[3:5] %>%
unique() %>%
filter(Indicator %in% unique(append(el$Var1, el$Var2)))
# add all the attributes to the vertex----
vertex_attr(g2, index = att2$Indicator) <- att2
View(att)
View(att2)
# add all the attributes to the vertex----
vertex_attr(g2, index = att2$Indicator) <- att2
vertex_attr(g2)
# add all the attributes to the vertex----
vertex_attr(g2, index = att2$name) <- att2
# ------------------------------------------------------------------
# build a weighted network base (edge weight = coefficient)----
matrix_d <- read_csv("indo_coefficients_matrix.csv") # adjacency matrix
matrix_d <- matrix_d[-1]
m <- as.matrix(matrix_d)
m
# m <- abs(m) # if you want to keep only the absolute value of coefficients
rownames(m) <- colnames(matrix_d)
g2 <- graph_from_adjacency_matrix(m, mode = "undirected", weighted = TRUE)
# repeat for the weighted network g2----
# some attributes----
info <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/processedIndo.csv")
# information: goal, target, indicator
att2 <- info[3:5] %>%
unique() %>%
filter(Indicator %in% unique(append(el$Var1, el$Var2)))
# add all the attributes to the vertex----
vertex_attr(g2, index = att2$Indicator) <- att2
V(g2)$name <- V(g2)$Indicator
View(att2)
library(igraph)
library(dplyr)
library(readr)
# load data and keep only the node pairs that are related----
setwd("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/PCA_results")
d <- read_csv("gua_coefficients.csv")
# build an unweighted network base (cutoff score = 0.5)----
el <- d %>%
filter(Var1 != Var2) %>%
filter(value >= 0.5) %>%
select(Var1, Var2)
# ...with some attributes----
info <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/processedGuate.csv")
# information: goal, target, indicator
att <- info[3:5] %>%
unique() %>%
filter(Indicator %in% unique(append(el$Var1, el$Var2)))
node <- att[,c(3,1,2)]
g <- graph.edgelist(as.matrix(el), directed = FALSE)
# add all the attributes to the vertex----
vertex_attr(g, index = att$Indicator) <- att
V(g)$name <- V(g)$Indicator
# calculate network variables: degree and several kinds of centrality score----
netatt <- data.frame(Indicator = V(g)$Indicator,
degree = degree(g), # number of neighbors # numerically equal to degree centrality
btwn = betweenness(g, directed = F), # betweenness centrality
# close = closeness(g, mode = c("all")), # closeness centrality not well-defined for disconnected graphs
eigen = evcent(g) # eigenvector centrality
)[1:5]
# merge the network attributes with attributes from other data source----
att <- merge(att, netatt, by='Indicator')
# rename for later analysis with text network----
catt <- att
cd <- d
cel <- el
cg <- g
# ------------------------------------------------------------------
# build a weighted network base (edge weight = coefficient)----
matrix_d <- read_csv("indo_coefficients_matrix.csv") # adjacency matrix
matrix_d <- matrix_d[-1]
m <- as.matrix(matrix_d)
m
# m <- abs(m) # if you want to keep only the absolute value of coefficients
rownames(m) <- colnames(matrix_d)
g2 <- graph_from_adjacency_matrix(m, mode = "undirected", weighted = TRUE)
# repeat for the weighted network g2----
# some attributes----
info <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/processedIndo.csv")
# information: goal, target, indicator
att2 <- info[3:5] %>%
unique() %>%
filter(Indicator %in% unique(append(el$Var1, el$Var2)))
# add all the attributes to the vertex----
vertex_attr(g2, index = att2$Indicator) <- att2
V(g2)$Indicator <- V(g2)$name
# add all the attributes to the vertex----
vertex_attr(g2, index = att2$Indicator) <- att2
# visualization
library(dplyr)
library(igraph)
library(ggplot2)
library(ggthemes)
library(network)
setwd("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network")
# load the 2 networks----
## 1. unweighted coefficient network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network/coefficient_net.RData")
## 2. weighted coefficient network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network/coefficient_net_weighted.RData")
library(ggnetwork)
library(ggthemes)
hex <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Visualizations/goal_hexcodes.csv")
## 1. unweighted coefficient network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network/coefficient_net.RData")
library(ggnetwork)
library(ggthemes)
hex <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Visualizations/goal_hexcodes.csv")
# unweighted (only kept coefficient > 0.5 or < -0.5)
V(cg)$id <- V(cg)$Indicator
plot(cg, color = V(cg)$Goal)
vertex_attr(cg)
df <- ggnetwork(cg,layout = with_kk())
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,catt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
# visualization
library(dplyr)
library(igraph)
library(ggplot2)
library(ggthemes)
library(ggnetwork)
# load the 2 networks----
## 1. unweighted text network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/Text_Model_Data/text_net.RData")
hex <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Visualizations/goal_hexcodes.csv")
# unweighted (only kept similarity > 0.2)
V(cg)$id <- V(cg)$Indicator
plot(cg, color = V(cg)$Goal)
vertex_attr(cg)
df <- ggnetwork(cg,layout = with_kk())
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,catt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
# visualization
library(dplyr)
library(igraph)
library(ggplot2)
library(ggthemes)
library(ggnetwork)
# load the 2 networks----
## 1. unweighted text network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/Text_Model_Data/text_net.RData")
hex <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Visualizations/goal_hexcodes.csv")
# unweighted (only kept similarity > 0.2)
V(tg)$id <- V(tg)$Indicator
plot(tg, color = V(tg)$Goal)
vertex_attr(tg)
df <- ggnetwork(tg,layout = with_kk())
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,catt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,tatt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
# visualization
library(dplyr)
library(igraph)
library(ggplot2)
library(ggthemes)
library(network)
setwd("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network")
## 1. Indonesia unweighted coefficient network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network/indo_coefficient_net.RData")
library(ggnetwork)
library(ggthemes)
hex <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Visualizations/goal_hexcodes.csv")
# unweighted (only kept coefficient > 0.5 or < -0.5)
V(cg)$id <- V(cg)$Indicator
plot(cg, color = V(cg)$Goal)
vertex_attr(cg)
df <- ggnetwork(cg,layout = with_kk())
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,catt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
## 1. Indonesia unweighted coefficient network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network/gua_coefficient_net.RData")
library(ggnetwork)
library(ggthemes)
hex <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Visualizations/goal_hexcodes.csv")
# unweighted (only kept coefficient > 0.5 or < -0.5)
V(cg)$id <- V(cg)$Indicator
plot(cg, color = V(cg)$Goal)
vertex_attr(cg)
df <- ggnetwork(cg,layout = with_kk())
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,catt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,catt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
# load the 2 networks----
## 1. coefficient network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network/indo_coefficient_net.RData")
install.packages("sna")
# install.packages("sna")
library(sna)
# load the 2 networks for Indonesia----
## 1. coefficient network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network/indo_coefficient_net.RData")
## 2. text network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/Text_Model_Data/text_net.RData")
as_adjacency_matrix(cg
type = "both"
# attr = NULL,
# edges = FALSE,
# names = TRUE,
# sparse = igraph_opt("sparsematrices")
)
as_adjacency_matrix(cg, type = "both")
as_adjacency_matrix(cg, edges = T)
d <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/Text_Model_Data/edgelist.csv")
View(d)
library(tidyr)
d <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/Text_Model_Data/edgelist.csv")
View(d)
View(d)
pivot_wider(d, names_from = related_indicator, values_from = similarity_score)
m <- pivot_wider(d, names_from = related_indicator, values_from = similarity_score)
View(m)
# visualization
library(dplyr)
library(igraph)
library(ggplot2)
library(ggthemes)
library(network)
setwd("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network")
## 1. Indonesia unweighted coefficient network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network/indo_coefficient_net.RData")
library(ggnetwork)
library(ggthemes)
hex <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Visualizations/goal_hexcodes.csv")
# unweighted (only kept coefficient > 0.5 or < -0.5)
V(cg)$id <- V(cg)$Indicator
plot(cg, color = V(cg)$Goal)
vertex_attr(cg)
df <- ggnetwork(cg,layout = with_fr())
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,catt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
## 2. Guatemala unweighted coefficient network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network/gua_coefficient_net.RData")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
df <- ggnetwork(cg,layout = nicely())
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,catt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
# visualization
library(dplyr)
library(igraph)
library(ggplot2)
library(ggthemes)
library(ggnetwork)
# load the 2 networks----
## 1. unweighted text network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/Text_Model_Data/text_net.RData")
hex <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Visualizations/goal_hexcodes.csv")
# unweighted (only kept similarity > 0.2)
V(tg)$id <- V(tg)$Indicator
plot(tg, color = V(tg)$Goal)
vertex_attr(tg)
df <- ggnetwork(tg,layout = with_kk())
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,tatt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
# geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
df <- ggnetwork(tg,layout = with_fr())
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,tatt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
# geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
# geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
# visualization
library(dplyr)
library(igraph)
library(ggplot2)
library(ggthemes)
library(network)
setwd("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network")
## 1. Indonesia unweighted coefficient network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network/indo_coefficient_net.RData")
library(ggnetwork)
library(ggthemes)
hex <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Visualizations/goal_hexcodes.csv")
# unweighted (only kept coefficient > 0.5 or < -0.5)
V(cg)$id <- V(cg)$Indicator
plot(cg, color = V(cg)$Goal)
vertex_attr(cg)
df <- ggnetwork(cg,layout = with_fr())
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,catt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
# visualization
library(dplyr)
library(igraph)
library(ggplot2)
library(ggthemes)
library(network)
setwd("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network")
## 2. Guatemala unweighted coefficient network
load("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Data/coefficient_network/gua_coefficient_net.RData")
library(ggnetwork)
library(ggthemes)
hex <- read_csv("/Users/hailey/Documents/GitHub/G5055_Practicum_Project2/Visualizations/goal_hexcodes.csv")
# unweighted (only kept coefficient > 0.5 or < -0.5)
V(cg)$id <- V(cg)$Indicator
plot(cg, color = V(cg)$Goal)
vertex_attr(cg)
df <- ggnetwork(cg,layout = with_kk())
# df <- ggnetwork(cg, layout = layout_in_circle(cg))
df_m <- left_join(df,catt[-c(2,3)],by="Indicator")
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
ggplot(df_m, aes(x, y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.2,color="seashell3",curvature = 0.2) +
geom_nodes(aes(colour = as.factor(Goal), size = degree), alpha = 0.8) +
scale_color_manual(values = hex$hexcode) +
# geom_nodetext_repel(aes(label = Goal),size = 2) +
# geom_nodetext(aes(label = Target),size = 2) +
# geom_nodetext(aes(label = Indicator),size = 2) +
# geom_nodetext(aes(label = Indicator), size = 2, color = "white") +
theme_blank()
